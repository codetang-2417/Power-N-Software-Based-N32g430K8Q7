


ARM Macro Assembler    Page 1 


    1 00000000         ;/*
    2 00000000         ; * Copyright (c) 2013-2017 ARM Limited. All rights rese
                       rved.
    3 00000000         ; *
    4 00000000         ; * SPDX-License-Identifier: Apache-2.0
    5 00000000         ; *
    6 00000000         ; * Licensed under the Apache License, Version 2.0 (the 
                       License); you may
    7 00000000         ; * not use this file except in compliance with the Lice
                       nse.
    8 00000000         ; * You may obtain a copy of the License at
    9 00000000         ; *
   10 00000000         ; * www.apache.org/licenses/LICENSE-2.0
   11 00000000         ; *
   12 00000000         ; * Unless required by applicable law or agreed to in wr
                       iting, software
   13 00000000         ; * distributed under the License is distributed on an A
                       S IS BASIS, WITHOUT
   14 00000000         ; * WARRANTIES OR CONDITIONS OF ANY KIND, either express
                        or implied.
   15 00000000         ; * See the License for the specific language governing 
                       permissions and
   16 00000000         ; * limitations under the License.
   17 00000000         ; *
   18 00000000         ; * ----------------------------------------------------
                       -------------------------
   19 00000000         ; *
   20 00000000         ; * Project:     CMSIS-RTOS RTX
   21 00000000         ; * Title:       Cortex-M4F Exception handlers
   22 00000000         ; *
   23 00000000         ; * ----------------------------------------------------
                       -------------------------
   24 00000000         ; */
   25 00000000         
   26 00000000         
   27 00000000 0000001C 
                       I_T_RUN_OFS
                               EQU              28          ; osRtxInfo.thread.
                                                            run offset
   28 00000000 00000038 
                       TCB_SP_OFS
                               EQU              56          ; TCB.SP offset
   29 00000000 00000022 
                       TCB_SF_OFS
                               EQU              34          ; TCB.stack_frame o
                                                            ffset
   30 00000000         
   31 00000000         
   32 00000000                 PRESERVE8
   33 00000000                 THUMB
   34 00000000         
   35 00000000         
   36 00000000                 AREA             |.constdata|, DATA, READONLY
   37 00000000                 EXPORT           irqRtxLib
   38 00000000 00      irqRtxLib
                               DCB              0           ; Non weak library 
                                                            reference
   39 00000001         
   40 00000001         



ARM Macro Assembler    Page 2 


   41 00000001                 AREA             |.text|, CODE, READONLY
   42 00000000         
   43 00000000         
   44 00000000         SVC_Handler
                               PROC
   45 00000000                 EXPORT           SVC_Handler
   46 00000000                 IMPORT           osRtxUserSVC
   47 00000000                 IMPORT           osRtxInfo
   48 00000000         
   49 00000000 F3EF 8009       MRS              R0,PSP      ; Get PSP
   50 00000004 6981            LDR              R1,[R0,#24] ; Load saved PC fro
                                                            m stack
   51 00000006 F811 1C02       LDRB             R1,[R1,#-2] ; Load SVC number
   52 0000000A BB91            CBNZ             R1,SVC_User ; Branch if not SVC
                                                             0
   53 0000000C         
   54 0000000C B501            PUSH             {R0,LR}     ; Save PSP and EXC_
                                                            RETURN
   55 0000000E E890 100F       LDM              R0,{R0-R3,R12} ; Load function 
                                                            parameters and addr
                                                            ess from stack
   56 00000012 47E0            BLX              R12         ; Call service func
                                                            tion
   57 00000014 E8BD 5000       POP              {R12,LR}    ; Restore PSP and E
                                                            XC_RETURN
   58 00000018 E88C 0003       STM              R12,{R0-R1} ; Store function re
                                                            turn values
   59 0000001C         
   60 0000001C         SVC_Context
   61 0000001C 4B23            LDR              R3,=osRtxInfo+I_T_RUN_OFS ; Loa
                                                            d address of osRtxI
                                                            nfo.run
   62 0000001E E893 0006       LDM              R3,{R1,R2}  ; Load osRtxInfo.th
                                                            read.run: curr & ne
                                                            xt
   63 00000022 4291            CMP              R1,R2       ; Check if thread s
                                                            witch is required
   64 00000024 BF08 4770       BXEQ             LR          ; Exit when threads
                                                             are the same
   65 00000028         
   66 00000028 B941            CBNZ             R1,SVC_ContextSave ; Branch if 
                                                            running thread is n
                                                            ot deleted
   67 0000002A F01E 0F10       TST              LR,#0x10    ; Check if extended
                                                             stack frame
   68 0000002E D110            BNE              SVC_ContextSwitch
   69 00000030 491F            LDR              R1,=0xE000EF34 ; FPCCR Address
   70 00000032 6808            LDR              R0,[R1]     ; Load FPCCR
   71 00000034 F020 0001       BIC              R0,#1       ; Clear LSPACT (Laz
                                                            y state)
   72 00000038 6008            STR              R0,[R1]     ; Store FPCCR
   73 0000003A E00A            B                SVC_ContextSwitch
   74 0000003C         
   75 0000003C         SVC_ContextSave
   76 0000003C E92C 0FF0       STMDB            R12!,{R4-R11} ; Save R4..R11
   77 00000040 F01E 0F10       TST              LR,#0x10    ; Check if extended
                                                             stack frame
   78 00000044 BF08 ED2C 
              8A10             VSTMDBEQ         R12!,{S16-S31} 



ARM Macro Assembler    Page 3 


                                                            ;  Save VFP S16.S31
                                                            
   79 0000004A         
   80 0000004A F8C1 C038       STR              R12,[R1,#TCB_SP_OFS] ; Store SP
                                                            
   81 0000004E F881 E022       STRB             LR, [R1,#TCB_SF_OFS] ; Store st
                                                            ack frame informati
                                                            on
   82 00000052         
   83 00000052         SVC_ContextSwitch
   84 00000052 601A            STR              R2,[R3]     ; osRtxInfo.thread.
                                                            run: curr = next
   85 00000054         
   86 00000054         SVC_ContextRestore
   87 00000054 F892 1022       LDRB             R1,[R2,#TCB_SF_OFS] ; Load stac
                                                            k frame information
                                                            
   88 00000058 6B90            LDR              R0,[R2,#TCB_SP_OFS] ; Load SP
   89 0000005A F061 0EFF       ORR              LR,R1,#0xFFFFFF00 
                                                            ; Set EXC_RETURN
   90 0000005E         
   91 0000005E F01E 0F10       TST              LR,#0x10    ; Check if extended
                                                             stack frame
   92 00000062 BF08 ECB0 
              8A10             VLDMIAEQ         R0!,{S16-S31} ;  Restore VFP S1
                                                            6..S31
   93 00000068 E8B0 0FF0       LDMIA            R0!,{R4-R11} ; Restore R4..R11
   94 0000006C F380 8809       MSR              PSP,R0      ; Set PSP
   95 00000070         
   96 00000070         SVC_Exit
   97 00000070 4770            BX               LR          ; Exit from handler
                                                            
   98 00000072         
   99 00000072         SVC_User
  100 00000072 B510            PUSH             {R4,LR}     ; Save registers
  101 00000074 4A0F            LDR              R2,=osRtxUserSVC ; Load address
                                                             of SVC table
  102 00000076 6813            LDR              R3,[R2]     ; Load SVC maximum 
                                                            number
  103 00000078 4299            CMP              R1,R3       ; Check SVC number 
                                                            range
  104 0000007A D806            BHI              SVC_Done    ; Branch if out of 
                                                            range
  105 0000007C         
  106 0000007C F852 4021       LDR              R4,[R2,R1,LSL #2] ; Load addres
                                                            s of SVC function
  107 00000080         
  108 00000080 C80F            LDM              R0,{R0-R3}  ; Load function par
                                                            ameters from stack
  109 00000082 47A0            BLX              R4          ; Call service func
                                                            tion
  110 00000084 F3EF 8409       MRS              R4,PSP      ; Get PSP
  111 00000088 6020            STR              R0,[R4]     ; Store function re
                                                            turn value
  112 0000008A         
  113 0000008A         SVC_Done
  114 0000008A BD10            POP              {R4,PC}     ; Return from handl
                                                            er
  115 0000008C         



ARM Macro Assembler    Page 4 


  116 0000008C                 ALIGN
  117 0000008C                 ENDP
  118 0000008C         
  119 0000008C         
  120 0000008C         PendSV_Handler
                               PROC
  121 0000008C                 EXPORT           PendSV_Handler
  122 0000008C                 IMPORT           osRtxPendSV_Handler
  123 0000008C         
  124 0000008C B510            PUSH             {R4,LR}     ; Save EXC_RETURN
  125 0000008E F7FF FFFE       BL               osRtxPendSV_Handler ; Call osRt
                                                            xPendSV_Handler
  126 00000092 E8BD 4010       POP              {R4,LR}     ; Restore EXC_RETUR
                                                            N
  127 00000096 F3EF 8C09       MRS              R12,PSP
  128 0000009A E7BF            B                SVC_Context
  129 0000009C         
  130 0000009C                 ALIGN
  131 0000009C                 ENDP
  132 0000009C         
  133 0000009C         
  134 0000009C         SysTick_Handler
                               PROC
  135 0000009C                 EXPORT           SysTick_Handler
  136 0000009C                 IMPORT           osRtxTick_Handler
  137 0000009C         
  138 0000009C B510            PUSH             {R4,LR}     ; Save EXC_RETURN
  139 0000009E F7FF FFFE       BL               osRtxTick_Handler ; Call osRtxT
                                                            ick_Handler
  140 000000A2 E8BD 4010       POP              {R4,LR}     ; Restore EXC_RETUR
                                                            N
  141 000000A6 F3EF 8C09       MRS              R12,PSP
  142 000000AA E7B7            B                SVC_Context
  143 000000AC         
  144 000000AC                 ALIGN
  145 000000AC                 ENDP
  146 000000AC         
  147 000000AC         
  148 000000AC                 END
              0000001C 
              E000EF34 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\irq_cm4f.d -o.\objects\irq_cm4f.o -I.\RTE\CMSIS -I.\R
TE\_PowerMeter -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil_v5
\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\Include -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5
.0.1\CMSIS\RTOS2\RTX\Include -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\
RTX\Include1 -ID:\Keil_v5\ARM\PACK\Nationstech\N32G430_DFP\1.0.0\firmware\CMSIS
\device -ID:\Keil_v5\ARM\PACK\Nationstech\N32G430_DFP\1.0.0\firmware\n32g430_st
d_periph_driver\inc --predefine="__UVISION_VERSION SETA 523" --predefine="_RTE_
 SETA 1" --predefine="N32G430 SETA 1" --predefine="USE_STDPERIPH_DRIVER SETA 1"
 --list=.\listings\irq_cm4f.lst D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2
\RTX\Source\ARM\irq_cm4f.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.constdata 00000000

Symbol: .constdata
   Definitions
      At line 36 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      None
Comment: .constdata unused
irqRtxLib 00000000

Symbol: irqRtxLib
   Definitions
      At line 38 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 37 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: irqRtxLib used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 41 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      None
Comment: .text unused
PendSV_Handler 0000008C

Symbol: PendSV_Handler
   Definitions
      At line 120 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 121 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: PendSV_Handler used once
SVC_Context 0000001C

Symbol: SVC_Context
   Definitions
      At line 60 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 128 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
      At line 142 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s

SVC_ContextRestore 00000054

Symbol: SVC_ContextRestore
   Definitions
      At line 86 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      None
Comment: SVC_ContextRestore unused
SVC_ContextSave 0000003C

Symbol: SVC_ContextSave
   Definitions
      At line 75 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 66 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: SVC_ContextSave used once
SVC_ContextSwitch 00000052

Symbol: SVC_ContextSwitch
   Definitions
      At line 83 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 68 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 73 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s

SVC_Done 0000008A

Symbol: SVC_Done
   Definitions
      At line 113 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 104 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: SVC_Done used once
SVC_Exit 00000070

Symbol: SVC_Exit
   Definitions
      At line 96 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      None
Comment: SVC_Exit unused
SVC_Handler 00000000

Symbol: SVC_Handler
   Definitions
      At line 44 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 45 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: SVC_Handler used once
SVC_User 00000072

Symbol: SVC_User
   Definitions
      At line 99 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 52 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: SVC_User used once
SysTick_Handler 0000009C

Symbol: SysTick_Handler
   Definitions
      At line 134 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 135 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: SysTick_Handler used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

I_T_RUN_OFS 0000001C

Symbol: I_T_RUN_OFS
   Definitions
      At line 27 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 61 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: I_T_RUN_OFS used once
TCB_SF_OFS 00000022

Symbol: TCB_SF_OFS
   Definitions
      At line 29 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 81 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
      At line 87 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s

TCB_SP_OFS 00000038

Symbol: TCB_SP_OFS
   Definitions
      At line 28 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 80 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
      At line 88 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

osRtxInfo 00000000

Symbol: osRtxInfo
   Definitions
      At line 47 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 61 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: osRtxInfo used once
osRtxPendSV_Handler 00000000

Symbol: osRtxPendSV_Handler
   Definitions
      At line 122 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 125 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: osRtxPendSV_Handler used once
osRtxTick_Handler 00000000

Symbol: osRtxTick_Handler
   Definitions
      At line 136 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 139 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: osRtxTick_Handler used once
osRtxUserSVC 00000000

Symbol: osRtxUserSVC
   Definitions
      At line 46 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 101 in file D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: osRtxUserSVC used once
4 symbols
357 symbols in table
